rules_version = "2";
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper: check membership on an EXISTING conversation doc
    function isConvMember(cid) {
      return request.auth != null
        && request.auth.uid in
           get(/databases/$(database)/documents/conversations/$(cid)).data.members;
    }

    // USERS: owner-only writes; reads allowed to any signed-in user
    match /users/{userId} {
      allow read:  if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // CONVERSATIONS
    match /conversations/{cid} {
      // Read/update only if you're a member (after the doc exists)
      allow read:   if isConvMember(cid);
      allow update: if isConvMember(cid);

      // Create: cannot use isConvMember (doc doesn't exist yet).
      // Require that the creator is included in the new doc's `members` array.
      allow create: if request.auth != null
                    && request.resource.data.members is list
                    && request.auth.uid in request.resource.data.members;

      // Usually disable deletes in production
      allow delete: if false;
    }

    // MESSAGES (subcollection under a conversation)
    match /conversations/{cid}/messages/{mid} {
      // Only members can read messages
      allow read: if isConvMember(cid);

      // Create: enforce membership + strict field validation
      allow create: if isConvMember(cid)
        // sender must be the authenticated user
        && request.resource.data.senderId == request.auth.uid
        // require either non-empty text OR non-empty mediaUrl
        && (
             (request.resource.data.text is string
              && request.resource.data.text.size() > 0)
             ||
             (request.resource.data.mediaUrl is string
              && request.resource.data.mediaUrl.size() > 0)
           )
        // createdAt must be a timestamp (serverTimestamp qualifies)
        && request.resource.data.createdAt is timestamp;

      // Lock down edits/deletes
      allow update, delete: if false;
    }
  }
}
